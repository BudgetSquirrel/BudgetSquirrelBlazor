<div class="_editable-text">
  @if (this.isEditing)
  {
    <input
      value="@this.valueState"
      @onchange="@((ChangeEventArgs __e) => this.manualValue = __e.Value.ToString())"
      class="_input"
      placeholder="@this.Placeholder"
      type="@this.Type"
      name="@this.Name" />

    <button @onclick="@this.Change">Done</button>
  }
  else
  {
    <span>@this.valueState</span>
    <button
      @onclick="@this.OnEditClicked"
      class="material-icons icon-button">
      mode_edit
    </button>
  }
</div>

@code {
  [Parameter]
  public string Value { get; set; }

  [Parameter]
  public string Placeholder { get; set; } = "";

  [Parameter]
  public string Name { get; set; } = "";

  [Parameter]
  public string Type { get; set; } = "text";

  [Parameter]
  public EventCallback<string> OnChange { get; set; } = new EventCallback<string>();

  private string manualValue { get; set; } = null;

  private string valueState => this.manualValue ?? this.Value ?? "";

  private bool isEditing = false;

  private void OnEditClicked()
  {
    this.isEditing = true;
  }

  private Task Change()
  {
    this.isEditing = false;
    return this.OnChange.InvokeAsync(this.valueState);
  }
}